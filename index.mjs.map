{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ceil = require( '@stdlib/math-base-special-ceil' );\nvar isNumber = require( '@stdlib/assert-is-number' ).isPrimitive;\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar format = require( '@stdlib/string-format' );\nvar MAX_LENGTH = require( '@stdlib/constants-uint32-max' );\nvar gen = require( '@stdlib/array-base-incrspace' );\n\n\n// MAIN //\n\n/**\n* Generates a linearly spaced numeric array using a provided increment.\n*\n* @param {number} x1 - first array value\n* @param {number} x2 - array element bound\n* @param {number} [increment=1] - increment\n* @throws {TypeError} first argument must be numeric\n* @throws {TypeError} second argument must be numeric\n* @throws {TypeError} third argument must be numeric\n* @throws {RangeError} length of created array must be less than `4294967295` (`2**32 - 1`)\n* @returns {Array} linearly spaced numeric array\n*\n* @example\n* var arr = incrspace( 0, 11, 2 );\n* // returns [ 0, 2, 4, 6, 8, 10 ]\n*/\nfunction incrspace( x1, x2, increment ) {\n\tvar len;\n\tvar inc;\n\tif ( !isNumber( x1 ) || isnan( x1 ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Start must be numeric. Value: `%s`.', x1 ) );\n\t}\n\tif ( !isNumber( x2 ) || isnan( x2 ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Stop must be numeric. Value: `%s`.', x2 ) );\n\t}\n\tif ( arguments.length < 3 ) {\n\t\tinc = 1;\n\t} else {\n\t\tinc = increment;\n\t\tif ( !isNumber( inc ) || isnan( inc ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Increment must be numeric. Value: `%s`.', inc ) );\n\t\t}\n\t}\n\tlen = ceil( ( x2-x1 ) / inc );\n\tif ( len > MAX_LENGTH ) {\n\t\tthrow new RangeError( 'invalid arguments. Generated array exceeds maximum array length.' );\n\t}\n\treturn gen( x1, x2, inc );\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrspace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate a linearly spaced numeric array using a provided increment.\n*\n* @module @stdlib/array-incrspace\n*\n* @example\n* var incrspace = require( '@stdlib/array-incrspace' );\n*\n* var arr = incrspace( 0, 11, 2 );\n* // returns [ 0, 2, 4, 6, 8, 10 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],"names":["ceil","require$$0","isNumber","require$$1","isPrimitive","isnan","require$$2","format","require$$3","MAX_LENGTH","require$$4","gen","require$$5","lib","x1","x2","increment","inc","TypeError","arguments","length","RangeError"],"mappings":";;0gBAsBA,IAAIA,EAAOC,EACPC,EAAWC,EAAsCC,YACjDC,EAAQC,EACRC,EAASC,EACTC,EAAaC,EACbC,EAAMC,EAgDV,ICpCAC,EDSA,SAAoBC,EAAIC,EAAIC,GAC3B,IACIC,EACJ,IAAMf,EAAUY,IAAQT,EAAOS,GAC9B,MAAM,IAAII,UAAWX,EAAQ,wDAAyDO,IAEvF,IAAMZ,EAAUa,IAAQV,EAAOU,GAC9B,MAAM,IAAIG,UAAWX,EAAQ,uDAAwDQ,IAEtF,GAAKI,UAAUC,OAAS,EACvBH,EAAM,OAGN,IAAMf,EADNe,EAAMD,IACmBX,EAAOY,GAC/B,MAAM,IAAIC,UAAWX,EAAQ,4DAA6DU,IAI5F,GADMjB,GAAQe,EAAGD,GAAOG,GACbR,EACV,MAAM,IAAIY,WAAY,oEAEvB,OAAOV,EAAKG,EAAIC,EAAIE"}