// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-ceil@v0.1.1-esm/index.mjs";import{isPrimitive as t}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@v0.1.1-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@v0.1.1-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-uint32-max@v0.1.1-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-incrspace@v0.1.0-esm/index.mjs";function m(m,a,d){var l;if(!t(m)||r(m))throw new TypeError(s("invalid argument. Start must be numeric. Value: `%s`.",m));if(!t(a)||r(a))throw new TypeError(s("invalid argument. Stop must be numeric. Value: `%s`.",a));if(arguments.length<3)l=1;else if(!t(l=d)||r(l))throw new TypeError(s("invalid argument. Increment must be numeric. Value: `%s`.",l));if(e((a-m)/l)>n)throw new RangeError("invalid arguments. Generated array exceeds maximum array length.");return i(m,a,l)}export{m as default};
//# sourceMappingURL=index.mjs.map
